---
import sortBy from "lodash/sortBy";
import Layout from "../../layouts/Layout.astro";
import MainHead from "../../components/MainHead.astro";
import MainName from "../../components/MainName.astro";
import MainText from "../../components/MainText.astro";
import MainSide from "../../components/MainSide.astro";
import MainWide from "../../components/MainWide.astro";
import SepLinks from "../../components/SepLinks.astro";
import FancyText from "../../components/FancyText.astro";
import Releases from "../../components/Releases.astro";
import type { JsonData, Label, Release } from "../../types";
import { link_site } from "../../functions";

const response = await fetch(
  "https://mjk-decades.s3.eu-west-2.amazonaws.com/db.json"
);
const json = (await response.json()) as JsonData;
const { id } = Astro.params;

let label: Label;

if (id && id in json.labels) {
  const lbl = json.labels[id];

  label = {
    ...lbl,
    releases: sortBy(
      Object.values(json.releases)
        .filter((r) => r.status?.startsWith("A") && r.label_id == id)
        .map(
          (r) =>
            ({
              ...r,
              text: null,
              label: null,
              artists: r.artist_ids
                .filter((id) => id in json.artists)
                .map((id) => ({
                  ...json.artists[id],
                  releases: [],
                })),
              genres: [],
            }) satisfies Release
        ),
      "date"
    ),
  };
} else {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const links: [string, string, string?][] = sortBy(
  label.links.map((lnk) => [
    lnk.url,
    link_site(lnk),
    lnk.which ? ` (${lnk.which})` : undefined,
  ]),
  ([_, site]) => site
);
---

<Layout title={`Label: ${label.name}`}>
  <MainHead>Label</MainHead>
  <MainName>{label.name}</MainName>
  <MainText>
    {
      label.desc
        ? label.desc.split("\n\n").map((para) => (
            <p class="text">
              <FancyText para={para} />
            </p>
          ))
        : null
    }
  </MainText>
  <MainSide>
    {
      links.length > 0 ? (
        <div class="panel">
          <div class="info">
            see also: <SepLinks links={links} external />
          </div>
        </div>
      ) : null
    }
  </MainSide>
  <MainWide><Releases releases={label.releases} /></MainWide>
</Layout>

<style>
  p.text {
    margin: 0;
    margin-bottom: 0.8rem;
    text-align: justify;
    line-height: 1.6rem;
  }

  p.byline {
    margin: 0;
    margin-bottom: 1.5rem;
    text-align: right;
  }

  .panel {
    padding: 0.5rem;
    background-color: var(--bg-panl);
  }

  .info {
    margin-bottom: 0.6rem;
    margin-left: 1rem;
    text-indent: -1rem;
  }
</style>
