---
import { getImage } from "astro:assets";
import { smartypantsu } from "smartypants";
import Layout from "../../layouts/Layout.astro";
import MainHead from "../../components/MainHead.astro";
import MainSide from "../../components/MainSide.astro";
import MainText from "../../components/MainText.astro";
import MainName from "../../components/MainName.astro";
import SepLinks from "../../components/SepLinks.astro";
import FancyText from "../../components/FancyText.astro";
import type { JsonData, Release } from "../../types";
import { SITES, type Kind, type Site } from "../../sites";
import {
  artist_name,
  link_site,
  release_artist_names,
  release_has_score,
  release_image_src,
  release_kind,
  release_score,
} from "../../functions";

const response = await fetch(
  "https://mjk-decades.s3.eu-west-2.amazonaws.com/db.json"
);
const data = (await response.json()) as JsonData;
const { id } = Astro.params;

let release: Release;

if (id && id in data.releases) {
  const json = data.releases[id];

  release = {
    ...json,
    label:
      json.label_id && json.label_id in data.labels
        ? { ...data.labels[json.label_id], releases: [] }
        : null,
    artists: json.artist_ids
      .filter((id) => id in data.artists)
      .map((id) => ({
        ...data.artists[id],
        releases: [],
      })),
    genres: json.genre_id_ords
      .filter(({ id }) => id in data.genres)
      .map(({ id, ord }) => ({
        ord,
        ...data.genres[id],
        parents: [],
        sub_genres: [],
        releases: [],
      })),
  };
} else {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const year = release.date.substring(0, 4);
const main_genres = release.genres.filter((g) => g.ord < 100);
const other_genres = release.genres.filter((g) => g.ord > 100);

function make_links(
  site_list: Record<string, Site>,
  kind: Kind | "",
  release: Release
) {
  const links: [string, string, string?][] = [];
  for (const site of Object.keys(site_list)) {
    for (const link of release.links) {
      if (link_site(link) === site && (site_list[site].kind ?? "") === kind) {
        const lnk: [string, string, string?] = [link.url, site_list[site].name];
        if (site == "rateyourmusic.com" && release_has_score(release, "rym")) {
          lnk.push(` (${release_score(release, "rym")} / 5)`);
        } else if (
          site == "albumoftheyear.org" &&
          release_has_score(release, "aoty") &&
          release_score(release, "aoty") !== "-"
        ) {
          lnk.push(` (${release_score(release, "aoty")})`);
        } else lnk.push("");
        links.push(lnk);
        break;
      }
    }
  }
  return links;
}

const stream_links = make_links(SITES, "stream", release);
const other_links = make_links(SITES, "", release);
const review_links = make_links(SITES, "review", release);

const title = smartypantsu(release.title);
const artist = smartypantsu(release_artist_names(release));
const desc = release.desc ? smartypantsu(release.desc) : "";
// const image = ;
const og_image = await getImage({
  src: release_image_src(release),
  inferSize: true,
  format: "jpg",
  widths: [480],
  sizes: "480px",
});
// console.log(og_image.srcSet.values);
---

<Layout
  title={`Release: ${title}`}
  og_title={`${title} | ${artist}`}
  og_description={desc}
  og_image={release.image_ext == "webp"
    ? og_image.src
    : release_image_src(release)}
  og_url={`vermilionsands.org/release/${id}`}
  og_type={"music.album"}
>
  <MainHead>{release_kind(release)}</MainHead>

  <MainName>
    {
      release.posted ? (
        <span class="posted">
          <span class="info-lbl">posted</span>: {release.posted}
        </span>
      ) : null
    }
    <span class="title">{title}</span>
    {release.status == "A*" ? " ‚≠ê" : null}
    <span class="artist">{artist}</span>
    <!-- <span class="h1">
      {release.which ? ` [${release.which}] ` : ""}
       ({year}{release.label ? ", " : ""}{
        release.label ? release.label.name : ""
      })
    </span> -->
  </MainName>

  <MainSide>
    <img src={og_image.src} />

    <!-- {
      release.desc ? (
        <p class="desc">
          <FancyPara para={release.desc} />
        </p>
      ) : null
    } -->

    <div class="panel">
      <div class="info">
        released: <a href={`/year/${year}`}>{year}</a>{
          release.date.substring(4)
        }
      </div>
      {
        release.label ? (
          <div class="info" style="margin-top: -0.6rem">
            on label:{" "}
            <a href={`/label/${release.label.id}`}>{release.label.name}</a>
          </div>
        ) : null
      }

      {
        release.artists.length > 0 ? (
          <div class="info">
            {release.artists.length == 1 ? "artist: " : "artists: "}
            <SepLinks
              links={release.artists.map((artist) => [
                `/artist/${artist.id}`,
                artist_name(artist),
              ])}
            />
          </div>
        ) : null
      }

      {
        main_genres.length > 0 ? (
          <div class="info">
            {main_genres.length == 1 ? "genre: " : "genres: "}
            <SepLinks
              links={main_genres.map((genre) => [
                `/genre/${genre.id}`,
                genre.name,
              ])}
            />
          </div>
        ) : null
      }
      {
        other_genres.length > 0 ? (
          <div class="info" style="margin-top: -0.6rem">
            with some:
            <SepLinks
              links={other_genres.map((genre) => [
                `/genre/${genre.id}`,
                genre.name,
              ])}
            />
          </div>
        ) : null
      }

      {
        stream_links.length > 0 ? (
          <div class="info">
            listen at: <SepLinks links={stream_links} external />
          </div>
        ) : null
      }
      {
        other_links.length > 0 ? (
          <div class="info">
            see also: <SepLinks links={other_links} external />
          </div>
        ) : null
      }
      {
        review_links.length > 0 ? (
          <div class="info">
            more reviews: <SepLinks links={review_links} external />
          </div>
        ) : null
      }
    </div>
  </MainSide>

  {
    release.text ? (
      <MainText>
        {release.text.split("\n\n").map((para) =>
          para.startsWith("-") ? (
            <p class="byline">{para.substring(2)}</p>
          ) : (
            // <hr class="sep" />
            <p class="text">
              <FancyText para={para} />
            </p>
          )
        )}
      </MainText>
    ) : null
  }
</Layout>

<style>
  img {
    margin-bottom: 2rem;
    display: block;
  }

  .artist {
    display: block;
    font-size: 80%;
    font-weight: 700;
  }

  .title {
    font-style: italic;
    font-weight: 400;
  }

  /* p.desc {
    margin: 0;
    margin-bottom: 0.6rem;
    text-align: justify;
  } */

  p.text {
    margin: 0;
    margin-bottom: 0.8rem;
    text-align: justify;
    line-height: 1.6rem;
  }

  p.byline {
    margin: 0;
    margin-bottom: 2rem;
    text-align: right;
    /* text-decoration: underline;
    text-underline-offset: 0.5rem; */
  }

  hr.sep {
    width: 4rem;
    height: 0.1rem;
    margin-bottom: 2rem;
  }

  .panel {
    padding: 0.5rem;
    background-color: var(--bg-panl);
  }

  .info {
    margin-bottom: 0.6rem;
    margin-left: 1rem;
    text-indent: -1rem;
  }

  .posted {
    display: block;
    padding: 0.1rem 0.5rem 0.3rem 0.5rem;
    background-color: var(--bg-panl);
    font-size: medium;
    font-weight: normal;
    margin-bottom: 0.5rem;
  }

  .info-lbl {
    font-family: var(--face-head);
    font-variant: small-caps;
    font-size: 110%;
  }
</style>
