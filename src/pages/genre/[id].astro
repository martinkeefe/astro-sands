---
import sortBy from "lodash/sortBy";
import Layout from "../../layouts/Layout.astro";
import MainHead from "../../components/MainHead.astro";
import MainName from "../../components/MainName.astro";
import MainText from "../../components/MainText.astro";
import MainSide from "../../components/MainSide.astro";
import MainWide from "../../components/MainWide.astro";
import SepLinks from "../../components/SepLinks.astro";
import Releases from "../../components/Releases.astro";
import type { JsonData, Genre, Release } from "../../types";
import { link_site } from "../../functions";

const response = await fetch(
  "https://mjk-decades.s3.eu-west-2.amazonaws.com/db.json"
);
const data = (await response.json()) as JsonData;
const { id } = Astro.params;

let genre: Genre;

if (id && id in data.genres) {
  const json = data.genres[id];

  genre = {
    ...json,
    parents: [],
    sub_genres: [],
    releases: sortBy(
      Object.values(data.releases)
        .filter(
          (r) =>
            r.status?.startsWith("A") &&
            r.genre_id_ords.map(({ id }) => id).includes(id)
        )
        .map(
          (r) =>
            ({
              ...r,
              text: null,
              label: null,
              artists: r.artist_ids
                .filter((id) => id in data.artists)
                .map((id) => ({
                  ...data.artists[id],
                  releases: [],
                })),
              genres: [],
            }) satisfies Release
        ),
      "date"
    ),
  };
} else {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const links: [string, string, string?][] = sortBy(
  genre.links.map((lnk) => [
    lnk.url,
    link_site(lnk),
    lnk.which ? ` (${lnk.which})` : undefined,
  ]),
  ([_, site]) => site
);
---

<Layout title={`Genre: ${genre.name}`}>
  <MainHead>Genre</MainHead>
  <MainName>{genre.name}</MainName>
  <MainText>
    <p class="text">{genre.desc}</p>
    <p class="byline">RateYourMusic</p>
  </MainText>
  <MainSide>
    {
      links.length > 0 ? (
        <div class="info">
          see also: <SepLinks links={links} external />
        </div>
      ) : null
    }
  </MainSide>
  <MainWide><Releases releases={genre.releases} /></MainWide>
</Layout>

<style>
  h1 {
    margin-bottom: 2rem;
  }
  p.text {
    margin: 0;
    margin-bottom: 0.6rem;
    text-align: justify;
  }

  p.byline {
    margin: 0;
    margin-bottom: 1.5rem;
    text-align: right;
  }

  .info {
    margin-bottom: 0.6rem;
    margin-left: 1rem;
    text-indent: -1rem;
  }
</style>
